#!/usr/bin/env python3
from __future__ import annotations

import sys
import os
from pathlib import Path
from dotenv import load_dotenv

# –¥—ñ—ó –º–µ–Ω—é
from okx_dex_bot.menu_actions import (
    run_trading_for_all_wallets,
    sell_leftovers_for_all_wallets,
    print_stats_for_all_wallets,
)

# –°–ø—Ä–æ–±—É—î–º–æ —ñ–º–ø–æ—Ä—Ç—É–≤–∞—Ç–∏ InquirerPy –¥–ª—è —Å—Ç—Ä—ñ–ª–æ—á–Ω–æ–≥–æ –º–µ–Ω—é
try:
    from InquirerPy import inquirer
except Exception:  # fallback –Ω–∞ –∑–≤–∏—á–∞–π–Ω–µ –≤–≤–µ–¥–µ–Ω–Ω—è
    inquirer = None


BANNER = r"""
 ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó ‚ñà‚ñà‚ïó  ‚ñà‚ñà‚ïó‚ñà‚ñà‚ïó  ‚ñà‚ñà‚ïó    ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ïó  ‚ñà‚ñà‚ïó    ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó  ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó
‚ñà‚ñà‚ïî‚ïê‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ïë ‚ñà‚ñà‚ïî‚ïù‚ïö‚ñà‚ñà‚ïó‚ñà‚ñà‚ïî‚ïù    ‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ïî‚ïê‚ïê‚ïê‚ïê‚ïù‚ïö‚ñà‚ñà‚ïó‚ñà‚ñà‚ïî‚ïù    ‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ïî‚ïê‚ïê‚ïê‚ñà‚ñà‚ïó‚ïö‚ïê‚ïê‚ñà‚ñà‚ïî‚ïê‚ïê‚ïù
‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù  ‚ïö‚ñà‚ñà‚ñà‚ïî‚ïù     ‚ñà‚ñà‚ïë  ‚ñà‚ñà‚ïë‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó   ‚ïö‚ñà‚ñà‚ñà‚ïî‚ïù     ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë   
‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë‚ñà‚ñà‚ïî‚ïê‚ñà‚ñà‚ïó  ‚ñà‚ñà‚ïî‚ñà‚ñà‚ïó     ‚ñà‚ñà‚ïë  ‚ñà‚ñà‚ïë‚ñà‚ñà‚ïî‚ïê‚ïê‚ïù   ‚ñà‚ñà‚ïî‚ñà‚ñà‚ïó     ‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë   
‚ïö‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù‚ñà‚ñà‚ïë  ‚ñà‚ñà‚ïó‚ñà‚ñà‚ïî‚ïù ‚ñà‚ñà‚ïó    ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ïî‚ïù ‚ñà‚ñà‚ïó    ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù‚ïö‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù   ‚ñà‚ñà‚ïë   
 ‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù ‚ïö‚ïê‚ïù  ‚ïö‚ïê‚ïù‚ïö‚ïê‚ïù  ‚ïö‚ïê‚ïù    ‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù ‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù‚ïö‚ïê‚ïù  ‚ïö‚ïê‚ïù    ‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù  ‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù    ‚ïö‚ïê‚ïù                                                                              
"""

def print_banner():
    os.system("cls" if os.name == "nt" else "clear")
    print(BANNER)
    print("‚ú® –õ–∞—Å–∫–∞–≤–æ –ø—Ä–æ—Å–∏–º–æ! –û–±–µ—Ä—ñ—Ç—å –¥—ñ—é –Ω–∏–∂—á–µ.\n")


def arrow_menu() -> str:
    """–ú–µ–Ω—é –∑—ñ —Å—Ç—Ä—ñ–ª–∫–∞–º–∏ (InquirerPy). –ü–æ–≤–µ—Ä—Ç–∞—î 'run' | 'sell' | 'stats' | 'exit'."""
    return inquirer.select(
        message="üß≠ –û–±–µ—Ä—ñ—Ç—å –¥—ñ—é:",
        choices=[
            {"name": "üöÄ  –ü—Ä–æ–≥–Ω–∞—Ç–∏ –∞–∫–∞—É–Ω—Ç–∏", "value": "run"},
            {"name": "üí∞  –ü—Ä–æ–¥–∞—Ç–∏ –∑–∞–ª–∏—à–∏–∫–∏", "value": "sell"},
            {"name": "üìä  –ü–∞—Ä—Å–∏–Ω–≥ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏", "value": "stats"},
            {"name": "üëã  –í–∏—Ö—ñ–¥", "value": "exit"},
        ],
        default="run",
        pointer="üëâ",
        instruction="–°—Ç—Ä—ñ–ª–∫–∏ ‚Üë/‚Üì –¥–ª—è –Ω–∞–≤—ñ–≥–∞—Ü—ñ—ó, Enter ‚Äî –ø—ñ–¥—Ç–≤–µ—Ä–¥–∏—Ç–∏",
    ).execute()


def fallback_menu() -> str:
    """–ó–∞–ø–∞—Å–Ω–∏–π –≤–∞—Ä—ñ–∞–Ω—Ç –±–µ–∑ InquirerPy (—Ç–µ–∫—Å—Ç–æ–≤–µ –º–µ–Ω—é)."""
    print("\n================= OKX DEX BOT =================")
    print("1) üöÄ  –ü—Ä–æ–≥–Ω–∞—Ç–∏ –∞–∫–∞—É–Ω—Ç–∏")
    print("2) üí∞  –ü—Ä–æ–¥–∞—Ç–∏ –∑–∞–ª–∏—à–∏–∫–∏")
    print("3) üìä  –ü–∞—Ä—Å–∏–Ω–≥ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏")
    print("4) üëã  –í–∏—Ö—ñ–¥")
    print("===============================================")
    choice = input("–í–∞—à –≤–∏–±—ñ—Ä [1-4]: ").strip().lower()
    mapping = {
        "1": "run", "r": "run", "run": "run",
        "2": "sell", "s": "sell", "sell": "sell",
        "3": "stats", "p": "stats", "stats": "stats",
        "4": "exit", "q": "exit", "quit": "exit", "exit": "exit",
    }
    return mapping.get(choice, "")


def main():
    load_dotenv()  # —â–æ–± .env –ø—ñ–¥—Ö–æ–ø–∏–≤—Å—è —ñ –¥–ª—è –≤–Ω—É—Ç—Ä—ñ—à–Ω—ñ—Ö –º–æ–¥—É–ª—ñ–≤

    while True:
        print_banner()
        try:
            if inquirer is not None:
                choice = arrow_menu()
            else:
                print("‚ö†Ô∏è  InquirerPy –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ. –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—é –∑–≤–∏—á–∞–π–Ω–∏–π —Ä–µ–∂–∏–º –≤–≤–æ–¥—É.")
                choice = fallback_menu()
        except KeyboardInterrupt:
            print("\nüëã –î–æ –∑—É—Å—Ç—Ä—ñ—á—ñ!")
            sys.exit(0)

        if choice == "run":
            print("üöÄ –°—Ç–∞—Ä—Ç—É—é —Ç–æ—Ä–≥—ñ–≤–ª—é –¥–ª—è –≤—Å—ñ—Ö –≥–∞–º–∞–Ω—Ü—ñ–≤‚Ä¶")
            run_trading_for_all_wallets()
            input("\n‚úÖ –ì–æ—Ç–æ–≤–æ. –ù–∞—Ç–∏—Å–Ω—ñ—Ç—å Enter, —â–æ–± –ø–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—è –≤ –º–µ–Ω—é‚Ä¶")

        elif choice == "sell":
            print("üí∞ –ü—Ä–æ–¥–∞—é –∑–∞–ª–∏—à–∫–∏ —Ç–æ–∫–µ–Ω—ñ–≤ –∑ –∫–æ–Ω—Ñ—ñ–≥—É‚Ä¶")
            sell_leftovers_for_all_wallets()
            input("\n‚úÖ –ì–æ—Ç–æ–≤–æ. –ù–∞—Ç–∏—Å–Ω—ñ—Ç—å Enter, —â–æ–± –ø–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—è –≤ –º–µ–Ω—é‚Ä¶")

        elif choice == "stats":
            print("üìä –ó–±–∏—Ä–∞—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É‚Ä¶")
            print_stats_for_all_wallets()
            input("\n‚úÖ –ì–æ—Ç–æ–≤–æ. –ù–∞—Ç–∏—Å–Ω—ñ—Ç—å Enter, —â–æ–± –ø–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—è –≤ –º–µ–Ω—é‚Ä¶")

        elif choice == "exit":
            print("üëã –î–æ –∑—É—Å—Ç—Ä—ñ—á—ñ!")
            sys.exit(0)

        else:
            print("ü§î –ù–µ–≤—ñ—Ä–Ω–∏–π –≤–∏–±—ñ—Ä. –°–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑.")
            input("–ù–∞—Ç–∏—Å–Ω—ñ—Ç—å Enter, —â–æ–± –ø—Ä–æ–¥–æ–≤–∂–∏—Ç–∏‚Ä¶")


if __name__ == "__main__":
    main()